[["rstudio-in-alliance-canada.html", "Chapter 4 RStudio in Alliance Canada 4.1 Introduction 4.2 Running an Apptainer HPC Container as an interactive session", " Chapter 4 RStudio in Alliance Canada Note 1: This refers to an experimental usage of RStudio for HPC. This approach has no official support from the Alliance, and the responsability is solely to the user. An official R environment is provided, with support, by the Alliance at this website. Note 2: This approach is aimed to single node processes. If you want to explore (or need) distributed processing, we recommend to use the supported version, and speak with user groups and the Alliance support to help designing routines. 4.1 Introduction In this approach, we use a prestablished RockeR, docker container from which we expand to our user needs. Binary versions of the container are available at Docker Hub, with the releases and their code available on GitHub. 4.2 Running an Apptainer HPC Container as an interactive session Prior to be able to run RStudio, you need to have a suitable container already built as a Singularity container, or build by yourself. From the cluster login node you can build it with the following steps: 1. Load Apptainer: $ module load apptainer Pick up the most recent version of it, and accept. 2. Then run the build (run this command at your home, project or scratch folder): $ apptainer build rstudio_container_v1_0.sif docker://ricardobarroslourenco/rstudio_container:v1_0 You should have, at the end, a file named rstudio_container_v1_0.sif in the directory you ran the command. This is your Apptainer container. 3. Create transient folders and files to be able to run your container (these should be hosted at the same location as your container). Creating directories: $ mkdir -p run var-lib-rstudio-server .rstudio Then the sqlite configuration file: $ printf &#39;provider=sqlite\\ndirectory=/var/lib/rstudio-server\\n&#39; &gt; database.conf 4. Starting an Interactive Job on the Supercomputer $ salloc --time=0:30:0 --account=rrg-ggalex --cpus-per-task=8 --mem=0 --mail-user=macid@mcmaster.ca --mail-type=ALL The setup of the flags is defined as this (more details available at the Alliance Documentation, as well as on the Slurm manual): time: time of the interactive session in HH:MM:SS; account: PI account at the Alliance Can project; cpus-per-task: Amount of cpus in this interactive session. Capped to the limit of the node; mem: amount of RAM you want to allocate (zero means all memory of the node); mail-user: e-mail address to send updates on the job allocation; mail-type: verbosity of the e-mail. 5. Start the container in the newly allocated working node $ apptainer exec --env --bind run:/run,var-lib-rstudio-server:/var/lib/rstudio-server,database.conf:/etc/rstudio/database.conf,.rstudio:/home/rstudio/.rstudio/ rstudio_container_v1_0.sif /usr/lib/rstudio-server/bin/rserver --auth-none=1 --auth-pam-helper-path=pam-helper --server-user=$(whoami) --www-port=8787 This will launch an rstudio server as a singularity service. If you need, bash is available as a terminal tab in that RStudio. To access the instance, you need to do a ssh tunnel, to forward the cluster port in the working node, to your machine. For that, you must to create a new, separate, ssh connection, and keep it open (without running any job on it). You can do as this (similar to what we described in the ssh section of CCPrimer, with a twist): $ ssh -i ~/computecanada/computecanada-key -L 9102:graXXX:8787 username@graham.computecanada.ca Some details: -i ~/computecanada/computecanada-key: the -i flag calls your ssh key file; -L 9102:graXXX:8787: the ssh tunnel in fact. It forwards node port 8787 to your localhost at port 9102; username@graham.computecanada.ca: your username, followed by the cluster url. Note that our lab research allocation is available in Graham for now. After this, you should be able to access the rstudio server by using this url in your browser: localhost:9102 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
